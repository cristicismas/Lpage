{"version":3,"sources":["constants/themes.js","contexts.js","constants/urls.js","constants/keys.js","helpers/areEqual.js","components/SearchEngine.js","components/PanelSizeRange.js","components/Options.js","constants/icons.js","components/Icon.js","components/SearchBar.js","components/ThemeSwitch.js","components/FormOverlay.js","components/RemoveConfirmation.js","components/WebsitePanel.js","components/FavoriteWebsites.js","components/App.js","serviceWorker.js","index.js"],"names":["THEMES","DARK","LIGHT","ThemeContext","React","createContext","theme","toggleTheme","URLS","GOOGLE","DUCKDUCKGO","BING","YAHOO","KEYS","areEqual","first","second","type","Object","prototype","toString","call","indexOf","firstLen","length","keys","compare","item1","item2","itemType","i","key","hasOwnProperty","SearchEngineContainer","styled","div","_templateObject","SearchEngineSelect","select","_templateObject2","props","SearchEngine","engineSelect","document","getElementById","selectedEngine","options","selectedIndex","value","this","changeState","_this","context","engineUrl","currentSearchEngine","searchEngines","map","react_default","a","createElement","id","htmlFor","defaultValue","name","onChange","handleEngineChange","Component","contextType","PanelSizeRange","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","handleChange","bind","assertThisInitialized","inherits","createClass","e","target","panelSize","className","min","max","MenuItem","Options_templateObject","HamburgerSlide","span","Options_templateObject2","Menu","ul","_templateObject3","Options","_this$props","components_SearchEngine","components_PanelSizeRange","ICONS","Icon","styles","svg","display","verticalAlign","path","fill","color","style","width","concat","size","height","viewBox","d","icon","defaultProps","Bar","input","SearchBar_templateObject","SearchBar","focus","preventDefault","searchUrl","searchBar","query","queryResults","window","open","alert","onSubmit","handleSubmit","components_Icon","ThemeLabel","p","ThemeSwitch_templateObject","SwitchSlider","ThemeSwitch_templateObject2","ThemeSwitch","toggleSwitch","checked","onClick","Form","form","FormOverlay_templateObject","Label","label","FormOverlay_templateObject2","FormTitle","h3","FormOverlay_templateObject3","CloseOverlayBtn","button","_templateObject4","FormOverlay","img","title","url","handleForm","closeOverlay","setState","defineProperty","_this2","_this$state","_this$props2","formTitle","ctaText","required","Confirmation","RemoveConfirmation_templateObject","CancelButton","RemoveConfirmation_templateObject2","RemoveButton","RemoveConfirmation_templateObject3","RemoveConfirmation","handleRemove","WebsiteLink","WebsitePanel_templateObject","WebsitePanel","showEditOverlay","showRemoveConfirmation","link","stopPropagation","nativeEvent","stopImmediatePropagation","panel","panelIndex","favoriteWebsites","favoriteWebsitesCopy","toConsumableArray","splice","_this$props$website","website","formattedUrl","includes","react","href","openLink","editPanel","removePanel","components_FormOverlay","handleEditForm","components_RemoveConfirmation","handleRemoveConfirmation","AddButton","FavoriteWebsites_templateObject","FavoriteWebsites","showFormOverlay","newFavorite","panels","index","components_WebsitePanel","AppTitle","h1","App_templateObject","App","defaultTheme","localStorage","getItem","engineSearchUrl","JSON","parse","keysPressed","addEventListener","keyCode","push","keyIndex","body","background","prevProps","prevState","_this$state2","setItem","searchEngine","stringify","console","log","_this$state3","Provider","components_Options","components_SearchBar","components_ThemeSwitch","components_FavoriteWebsites","Boolean","location","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f62ac4b.chunk.js","sourcesContent":["export const THEMES = {\n  DARK: 'dark',\n  LIGHT: 'light'\n};\n","import React from 'react';\nimport { THEMES } from './constants/themes';\n\nexport const ThemeContext = React.createContext({\n  theme: THEMES.DARK,\n  toggleTheme: () => {}\n});\n","export const URLS = {\n  GOOGLE: 'http://google.com/search?q=',\n  DUCKDUCKGO: 'https://duckduckgo.com/?q=',\n  BING: 'https://www.bing.com/search?q=',\n  YAHOO: 'https://us.search.yahoo.com/search?p='\n};\n","export const KEYS = {\n  CTRL: 17,\n  X: 88\n}","var areEqual = (first, second) => {\n\n\t// Get the first type\n\tvar type = Object.prototype.toString.call(first);\n\n\t// If the two objects are not the same type, return false\n\tif (type !== Object.prototype.toString.call(second)) return false;\n\n\t// If items are not an object or array, return false\n\tif (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\n\n\t// Compare the length of the length of the two items\n\tvar firstLen = type === '[object Array]' ? first.length : Object.keys(first).length;\n\tvar secondLen = type === '[object Array]' ? second.length : Object.keys(second).length;\n\tif (firstLen !== secondLen) return false;\n\n\t// Compare two items\n\tvar compare = function (item1, item2) {\n\n\t\t// Get the object type\n\t\tvar itemType = Object.prototype.toString.call(item1);\n\n\t\t// If an object or array, compare recursively\n\t\tif (['[object Array]', '[object Object]'].indexOf(itemType) >= 0) {\n\t\t\tif (!areEqual(item1, item2)) return false;\n\t\t}\n\n\t\t// secondwise, do a simple comparison\n\t\telse {\n\n\t\t\t// If the two items are not the same type, return false\n\t\t\tif (itemType !== Object.prototype.toString.call(item2)) return false;\n\n\t\t\t// Else if it's a function, convert to a string and compare\n\t\t\t// secondwise, just compare\n\t\t\tif (itemType === '[object Function]') {\n\t\t\t\tif (item1.toString() !== item2.toString()) return false;\n\t\t\t} else {\n\t\t\t\tif (item1 !== item2) return false;\n\t\t\t}\n\n\t\t}\n\t};\n\n\t// Compare properties\n\tif (type === '[object Array]') {\n\t\tfor (var i = 0; i < firstLen; i++) {\n\t\t\tif (compare(first[i], second[i]) === false) return false;\n\t\t}\n\t} else {\n\t\tfor (var key in first) {\n\t\t\tif (first.hasOwnProperty(key)) {\n\t\t\t\tif (compare(first[key], second[key]) === false) return false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// If nothing failed, return true\n\treturn true;\n\n};\n\nexport default areEqual;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { URLS } from '../constants/urls';\nimport { ThemeContext } from '../contexts';\nimport { THEMES } from '../constants/themes';\n\nconst SearchEngineContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst SearchEngineSelect = styled.select`\n  background-color: ${props => (props.theme === THEMES.DARK ? '#333' : '#eee')};\n  border: 1px solid ${props => (props.theme === THEMES.DARK ? '#eee' : '#333')};\n  color: ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#333')};\n`;\n\nclass SearchEngine extends Component {\n  handleEngineChange() {\n    const engineSelect = document.getElementById('search-engine-dropdown');\n    const selectedEngine = engineSelect.options[engineSelect.selectedIndex].value;\n\n    this.props.changeState('engineSearchUrl', URLS[selectedEngine]);\n  }\n\n  render() {\n    const { theme } = this.context;\n    const { engineUrl } = this.props;\n\n    let currentSearchEngine = 'GOOGLE';\n\n    const searchEngines = Object.keys(URLS).map(key => {\n      if (URLS[key] === engineUrl) {\n        currentSearchEngine = key;\n      }\n\n      return (\n        <option value={key} key={key}>\n          {key}\n        </option>\n      );\n    });\n\n    return (\n      <SearchEngineContainer id=\"search-engine\">\n        <label htmlFor=\"search-engine-dropdown\">Search Engine</label>\n        <SearchEngineSelect\n          defaultValue={currentSearchEngine}\n          name=\"search-engine-dropdown\"\n          id=\"search-engine-dropdown\"\n          theme={theme}\n          onChange={() => this.handleEngineChange()}>\n          {searchEngines}\n        </SearchEngineSelect>\n      </SearchEngineContainer>\n    );\n  }\n}\n\nSearchEngine.contextType = ThemeContext;\n\nexport default SearchEngine;\n","import React, { Component } from 'react';\nimport '../css/PanelSizeRange.css';\n\nexport class PanelSizeRange extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    this.props.changeState('panelSize', e.target.value);\n  }\n\n  render() {\n    const { panelSize } = this.props;\n    \n    return (\n      <div className='panel-size-slider'>\n        <label htmlFor='panel-size-range'>Panel Size</label>\n        <input\n          type='range'\n          name='panel-size-range'\n          id='panel-size-range'\n          defaultValue={panelSize}\n          min='200'\n          max='1000'\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PanelSizeRange;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { THEMES } from '../constants/themes';\nimport { ThemeContext } from '../contexts';\nimport '../css/Options.css';\n\nimport SearchEngine from './SearchEngine';\nimport PanelSizeRange from './PanelSizeRange';\n\nconst MenuItem = styled.div`\n  color: ${props => (props.theme === THEMES.DARK ? '#eee' : '#333')};\n`;\n\nconst HamburgerSlide = styled.span`\n  background: ${props => (props.theme === THEMES.DARK ? '#eee' : '#333')};\n`;\n\nconst Menu = styled.ul`\n  background: ${props => (props.theme === THEMES.DARK ? '#222' : '#fff')};\n`;\n\nclass Options extends Component {\n  render() {\n    const { theme } = this.context;\n    const { engineUrl, panelSize } = this.props;\n\n    return (\n      <div id=\"options-menu\">\n        <input type=\"checkbox\" name=\"options-toggle\" id=\"options-toggle\" />\n\n        <HamburgerSlide className=\"hamburger-slide\" theme={theme} />\n        <HamburgerSlide className=\"hamburger-slide\" theme={theme} />\n        <HamburgerSlide className=\"hamburger-slide\" theme={theme} />\n\n        <Menu id=\"menu\" theme={theme}>\n          <MenuItem className=\"menu-item\" theme={theme}>\n            <SearchEngine changeState={this.props.changeState} engineUrl={engineUrl} />\n          </MenuItem>\n          <MenuItem className=\"menu-item\" theme={theme}>\n            <PanelSizeRange changeState={this.props.changeState} panelSize={panelSize} />\n          </MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nOptions.contextType = ThemeContext;\n\nexport default Options;\n","export const ICONS = {\n  SEARCH: 'M23.111 20.058l-4.977-4.977c.965-1.52 1.523-3.322 1.523-5.251 0-5.42-4.409-9.83-9.829-9.83-5.42 0-9.828 4.41-9.828 9.83s4.408 9.83 9.829 9.83c1.834 0 3.552-.505 5.022-1.383l5.021 5.021c2.144 2.141 5.384-1.096 3.239-3.24zm-20.064-10.228c0-3.739 3.043-6.782 6.782-6.782s6.782 3.042 6.782 6.782-3.043 6.782-6.782 6.782-6.782-3.043-6.782-6.782zm2.01-1.764c1.984-4.599 8.664-4.066 9.922.749-2.534-2.974-6.993-3.294-9.922-.749z',\n  EDIT: 'M14.078 7.061l2.861 2.862-10.799 10.798-3.584.723.724-3.585 10.798-10.798zm0-2.829l-12.64 12.64-1.438 7.128 7.127-1.438 12.642-12.64-5.691-5.69zm7.105 4.277l2.817-2.82-5.691-5.689-2.816 2.817 5.69 5.692z'\n}","import React from 'react';\n\nconst Icon = props => {\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle'\n    },\n    path: {\n      fill: props.color\n    }\n  };\n\n  return (\n    <svg\n      style={styles.svg}\n      width={`${props.size}px`}\n      height={`${props.size}px`}\n      viewBox={`0 0 ${props.size} ${props.size}`}\n      className=\"svgIcon\"\n      id={props.id}>\n      <path style={styles.path} d={props.icon} />\n    </svg>\n  );\n};\n\nIcon.defaultProps = {\n  size: 24\n};\n\nexport default Icon;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { ICONS } from '../constants/icons';\nimport { THEMES } from '../constants/themes';\nimport { ThemeContext } from '../contexts';\nimport '../css/SearchBar.css';\n\nimport Icon from './Icon';\n\nconst Bar = styled.input`\n  background-color: ${props => (props.theme === THEMES.DARK ? '#222' : '#f5f5f5')};\n  color: ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#222')};\n`;\n\nclass SearchBar extends Component {\n  componentDidMount() {\n    document.getElementById('search-bar').focus();\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { searchUrl } = this.props;\n\n    const searchBar = document.getElementById('search-bar');\n    const query = searchBar.value;\n\n    // Open query in a new window.\n    const queryResults = window.open(searchUrl + query, '_blank');\n\n    // Focus the new window\n    if (queryResults) {\n      queryResults.focus();\n    } else {\n      alert('Please allow popups for this website.');\n    }\n\n    searchBar.value = \"\";\n  }\n\n  render() {\n    const { theme } = this.context;\n\n    return (\n      <form id=\"search-bar-container\" onSubmit={e => this.handleSubmit(e)}>\n        <Bar theme={theme} id=\"search-bar\" />\n        <Icon icon={ICONS.SEARCH} color={theme === THEMES.DARK ? '#555' : '#999'} id=\"search-icon\" />\n      </form>\n    );\n  }\n}\n\nSearchBar.contextType = ThemeContext;\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../contexts';\nimport { THEMES } from '../constants/themes';\nimport '../css/ThemeSwitch.css';\n\nconst ThemeLabel = styled.p`\n  position: relative;\n  top: 5px;\n  margin: 10px;\n  text-align: center;\n  display: inline-block;\n  color: ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#333')};\n`;\n\nconst SwitchSlider = styled.span`\n  background-color: ${props => (props.theme === THEMES.DARK ? '#eee' : '#333')};\n`;\n\nclass ThemeSwitch extends Component {\n  componentDidMount() {\n    const { theme } = this.context;\n\n    const toggleSwitch = document.getElementById('theme-toggle-switch');\n\n    // Make sure switch :checked value matches the theme.\n    if (theme === THEMES.DARK) {\n      toggleSwitch.checked = false;\n    } else {\n      toggleSwitch.checked = true;\n    }\n  }\n\n  render() {\n    const { theme } = this.context;\n\n    return (\n      <div id=\"theme-switch\">\n        <ThemeLabel theme={theme}>Dark</ThemeLabel>\n        <label className=\"switch\">\n          <input type=\"checkbox\" onClick={() => this.context.toggleTheme()} id=\"theme-toggle-switch\" />\n          <SwitchSlider theme={theme} className=\"switch-slider\" />\n        </label>\n        <ThemeLabel theme={theme}>Light</ThemeLabel>\n      </div>\n    );\n  }\n}\n\nThemeSwitch.contextType = ThemeContext;\n\nexport default ThemeSwitch;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { THEMES } from '../constants/themes';\nimport '../css/FormOverlay.css';\n\nconst Form = styled.form`\n  background-color: ${props => (props.theme === THEMES.DARK ? '#222' : '#ccc')};\n  border: 2px solid ${props => (props.theme === THEMES.DARK ? '#ccc' : '#333')};\n`;\n\nconst Label = styled.label`\n  color: ${props => (props.theme === THEMES.DARK ? '#eee' : '#333')};\n`;\n\nconst FormTitle = styled.h3`\n  color: ${props => (props.theme === THEMES.DARK ? '#eee' : '#333')};\n`;\n\nconst CloseOverlayBtn = styled.button`\n  color: ${props => (props.theme === THEMES.DARK ? '#ccc' : '#333')};\n`;\n\nclass FormOverlay extends Component {\n  constructor(props) {\n    super(props);\n\n    const { img, title, url } = this.props;\n\n    this.state = {\n      img: img || '',\n      title: title || '',\n      url: url || ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.handleForm(this.state);\n    this.props.closeOverlay();\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const { img, title, url } = this.state;\n    const { theme, formTitle, ctaText } = this.props;\n    \n    return (\n      <div className=\"overlay\">\n        <Form className=\"add-favorite-form\" onSubmit={this.handleSubmit} theme={theme}>\n          <FormTitle theme={theme} className=\"form-title\">\n            {formTitle}\n          </FormTitle>\n\n          <div className=\"form-group\">\n            <Label theme={theme} htmlFor=\"title\">\n              Website Title\n            </Label>\n            <input type=\"text\" required name=\"title\" id=\"title-input\" defaultValue={title} onChange={this.handleChange} />\n          </div>\n\n          <div className=\"form-group\">\n            <Label theme={theme} htmlFor=\"url\">\n              Website Url\n            </Label>\n            <input type=\"text\" required name=\"url\" id=\"url-input\" defaultValue={url} onChange={this.handleChange} />\n          </div>\n\n          <div className=\"form-group\">\n            <Label theme={theme} htmlFor=\"img\">\n              Image Url\n            </Label>\n            <input type=\"text\" required name=\"img\" id=\"img-input\" defaultValue={img} onChange={this.handleChange} />\n          </div>\n\n          <CloseOverlayBtn id=\"close-overlay-btn\" theme={theme} onClick={() => this.props.closeOverlay()}>\n            &#x2715;\n          </CloseOverlayBtn>\n\n          <button type=\"submit\">{ctaText}</button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default FormOverlay;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { THEMES } from '../constants/themes';\nimport { ThemeContext } from '../contexts';\nimport '../css/RemoveConfirmation.css';\n\nconst Confirmation = styled.div`\n  background-color: ${props => (props.theme === THEMES.DARK ? '#222' : '#eee')};\n  color: ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#333')};\n`;\n\nconst CancelButton = styled.button`\n  color: ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#333')};\n  background-color: ${props => (props.theme === THEMES.DARK ? '#222' : '#eee')};\n  border: 1px solid ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#333')};\n`;\n\nconst RemoveButton = styled.button`\n  color: #f5f5f5;\n  background-color: #910000;\n  border: 1px solid ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#333')};\n`;\n\nclass RemoveConfirmation extends Component {\n  render() {\n    const { theme } = this.context;\n\n    return (\n      <div className='overlay'>\n        <Confirmation className='remove-confirmation' theme={theme}>\n          <h3>Are you sure you want to remove this website?</h3>\n          <RemoveButton onClick={this.props.handleRemove} theme={theme} className='remove-btn'>\n            Remove\n          </RemoveButton>\n          <CancelButton onClick={this.props.closeOverlay} theme={theme}>\n            Cancel\n          </CancelButton>\n        </Confirmation>\n      </div>\n    );\n  }\n}\n\nRemoveConfirmation.contextType = ThemeContext;\n\nexport default RemoveConfirmation;\n","import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { THEMES } from '../constants/themes';\nimport { ThemeContext } from '../contexts';\nimport { ICONS } from '../constants/icons';\nimport '../css/WebsitePanel.css';\n\nimport FormOverlay from './FormOverlay';\nimport Icon from './Icon';\nimport RemoveConfirmation from './RemoveConfirmation';\n\nconst WebsiteLink = styled.div`\n  background-image: ${props => `url(${props.img})`};\n  border: 1px solid ${props => (props.theme === THEMES.DARK ? '#eee' : '#333')};\n  min-width: ${props => props.panelSize}px;\n  max-width: ${props => props.panelSize}px;\n  min-height: ${props => props.panelSize / 2}px;\n  max-height: ${props => props.panelSize / 2}px;\n  cursor: pointer;\n  color: #eee;\n  text-decoration: none;\n`;\n\nclass WebsitePanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showEditOverlay: false,\n      showRemoveConfirmation: false\n    };\n  }\n\n  openLink(link) {\n    window.open(link, '_blank');\n  }\n\n  removePanel(e) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    this.setState({ showRemoveConfirmation: true });\n  }\n\n  editPanel(e) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    this.setState({ showEditOverlay: true });\n  }\n\n  handleEditForm(panel) {\n    const { panelIndex, favoriteWebsites } = this.props;\n\n    const favoriteWebsitesCopy = [...favoriteWebsites];\n    favoriteWebsitesCopy[panelIndex] = panel;\n\n    this.props.changeState('favoriteWebsites', favoriteWebsitesCopy);\n  }\n\n  handleRemoveConfirmation() {\n    const { panelIndex, favoriteWebsites } = this.props;\n\n    const favoriteWebsitesCopy = [...favoriteWebsites];\n    favoriteWebsitesCopy.splice(panelIndex, 1);\n\n    this.props.changeState('favoriteWebsites', favoriteWebsitesCopy);\n  }\n\n  render() {\n    const { showEditOverlay, showRemoveConfirmation } = this.state;\n    const { title, url, img } = this.props.website;\n    const { theme } = this.context;\n\n    let formattedUrl = url;\n\n    if (!url.includes('https://')) {\n      formattedUrl = 'https://' + url;\n    }\n\n    return (\n      <Fragment>\n        <WebsiteLink\n          className='panel'\n          href={formattedUrl}\n          target='_blank'\n          panelSize={this.props.panelSize}\n          img={img}\n          theme={theme}\n          onClick={() => this.openLink(formattedUrl)}\n        >\n          <div className='alpha-overlay'>\n            <h4 className='panel-title'>{title}</h4>\n            <div className='buttons'>\n              <button className='edit-panel' onClick={e => this.editPanel(e)}>\n                <Icon icon={ICONS.EDIT} color='#f5f5f5' />\n              </button>\n              <button className='remove-panel' onClick={e => this.removePanel(e)}>\n                &#x2715;\n              </button>\n            </div>\n          </div>\n        </WebsiteLink>\n\n        {showEditOverlay ? (\n          <FormOverlay\n            formTitle='Edit Favorite'\n            ctaText='Submit'\n            handleForm={panel => this.handleEditForm(panel)}\n            theme={theme}\n            closeOverlay={() => this.setState({ showEditOverlay: false })}\n            title={title}\n            url={url}\n            img={img}\n          />\n        ) : null}\n\n        {showRemoveConfirmation ? (\n          <RemoveConfirmation\n            closeOverlay={() => this.setState({ showRemoveConfirmation: false })}\n            handleRemove={() => this.handleRemoveConfirmation()}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nWebsitePanel.contextType = ThemeContext;\n\nexport default WebsitePanel;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { THEMES } from '../constants/themes';\nimport { ThemeContext } from '../contexts';\nimport '../css/FavoriteWebsites.css';\n\nimport WebsitePanel from './WebsitePanel';\nimport FormOverlay from './FormOverlay';\n\nconst AddButton = styled.button`\n  color: ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#333')};\n  border: 2px solid\n    ${props => (props.theme === THEMES.DARK ? '#f5f5f5' : '#333')};\n`;\n\nclass FavoriteWebsites extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showFormOverlay: false\n    };\n\n    this.handleForm = this.handleForm.bind(this);\n  }\n\n  handleForm(newFavorite) {\n    const { favoriteWebsites } = this.props;\n\n    this.props.changeState('favoriteWebsites', [...favoriteWebsites, newFavorite]);\n  }\n\n  render() {\n    const { showFormOverlay } = this.state;\n    const { favoriteWebsites, panelSize } = this.props;\n    const { theme } = this.context;\n\n    const panels = favoriteWebsites.map((link, index) => (\n      <WebsitePanel\n        website={link}\n        key={link + index}\n        panelSize={panelSize}\n        favoriteWebsites={favoriteWebsites}\n        changeState={this.props.changeState}\n        panelIndex={index}\n      />\n    ));\n\n    return (\n      <div id='favorites'>\n        <div id='favorites-list'>{panels}</div>\n        <AddButton\n          className='add-to-favorites-btn'\n          theme={theme}\n          onClick={() => this.setState({ showFormOverlay: true })}\n        >\n          &#43;\n        </AddButton>\n\n        {showFormOverlay ? (\n          <FormOverlay\n            formTitle='New Favorite'\n            ctaText='Add Website'\n            handleForm={this.handleForm}\n            theme={theme}\n            closeOverlay={() =>\n              this.setState({ showFormOverlay: false })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nFavoriteWebsites.contextType = ThemeContext;\n\nexport default FavoriteWebsites;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../contexts';\nimport { THEMES } from '../constants/themes';\nimport { URLS } from '../constants/urls';\nimport { KEYS } from '../constants/keys';\nimport areEqual from '../helpers/areEqual';\nimport '../css/App.css';\n\nimport Options from './Options';\nimport SearchBar from './SearchBar';\nimport ThemeSwitch from './ThemeSwitch';\nimport FavoriteWebsites from './FavoriteWebsites';\n\nconst AppTitle = styled.h1`\n  text-align: center;\n  color: ${props => props.theme === THEMES.DARK ? '#f5f5f5' : '#333'};\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const defaultTheme = localStorage.getItem('theme') === THEMES.LIGHT ? THEMES.LIGHT : THEMES.DARK;\n\n    const engineSearchUrl = URLS[localStorage.getItem('searchEngine')] || URLS.GOOGLE;\n\n    const favoriteWebsites = localStorage.getItem('favoriteWebsites')\n      ? JSON.parse(localStorage.getItem('favoriteWebsites'))\n      : [];\n\n    const panelSize = localStorage.getItem('panelSize') || 400;\n\n    this.state = {\n      theme: defaultTheme,\n      engineSearchUrl,\n      favoriteWebsites,\n      panelSize,\n      keysPressed: []\n    };\n\n    this.changeState = this.changeState.bind(this);\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  componentDidMount() {\n    const { theme, keysPressed } = this.state;\n\n    document.addEventListener('keydown', e => {\n      if (e.keyCode === KEYS.CTRL || e.keyCode === KEYS.X) {\n        this.setState(\n          {\n            keysPressed: keysPressed.push(e.keyCode)\n          },\n          () => {\n            if (keysPressed.includes(KEYS.CTRL) && keysPressed.includes(KEYS.X)) {\n              document.getElementById('search-bar').focus();\n            }\n          }\n        );\n      }\n    });\n\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === KEYS.CTRL || e.keyCode === KEYS.X) {\n        const keyIndex = keysPressed.indexOf(e.keyCode);\n\n        this.setState({\n          keysPressed: keysPressed.splice(keyIndex, 1)\n        });\n      }\n    });\n\n    document.body.style.background = theme === THEMES.DARK ? '#333' : '#eee';\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { theme, engineSearchUrl, favoriteWebsites, panelSize } = this.state;\n\n    if (prevState.theme !== theme) {\n      document.body.style.background = theme === THEMES.DARK ? '#333' : '#eee';\n      localStorage.setItem('theme', theme);\n    } else if (prevState.engineSearchUrl !== engineSearchUrl) {\n      for (let searchEngine in URLS) {\n        if (URLS[searchEngine] === engineSearchUrl) {\n          localStorage.setItem('searchEngine', searchEngine);\n        }\n      }\n    } else if (!areEqual(prevState.favoriteWebsites, favoriteWebsites)) {\n      localStorage.setItem('favoriteWebsites', JSON.stringify(favoriteWebsites));\n    } else if (prevState.panelSize !== panelSize) {\n      localStorage.setItem('panelSize', panelSize);\n    }\n  }\n\n  changeState(key, value) {\n    console.log(value);\n    this.setState({\n      [key]: value\n    });\n  }\n\n  toggleTheme() {\n    this.setState({\n      theme: this.state.theme === THEMES.DARK ? THEMES.LIGHT : THEMES.DARK\n    });\n  }\n\n  render() {\n    const { theme, engineSearchUrl, favoriteWebsites, panelSize } = this.state;\n\n    return (\n      <ThemeContext.Provider value={{ theme, toggleTheme: this.toggleTheme }}>\n        <div id='app'>\n          <Options changeState={this.changeState} panelSize={panelSize} engineUrl={engineSearchUrl} />\n          <AppTitle theme={theme}>Welcome</AppTitle>\n          <SearchBar searchUrl={engineSearchUrl} />\n          <ThemeSwitch />\n          <FavoriteWebsites\n            favoriteWebsites={favoriteWebsites}\n            changeState={this.changeState}\n            panelSize={panelSize}\n          />\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}